initSidebarItems({"enum":[["DataPageHeader",""],["LogicalType",""],["ParquetError",""],["ParquetTimeUnit",""],["ParquetType","Representation of a Parquet type. Used to describe primitive leaf fields and structs, including top-level schema. Note that the top-level schema type is represented using `GroupType` whose repetition is `None`."],["PhysicalType",""],["PrimitiveConvertedType",""]],"fn":[["_get_page_iterator",""],["_get_page_stream","Returns a stream of compressed data pages"],["_read_metadata","Reads a file’s metadata."],["_read_metadata_async",""],["decompress","Decompresses the page, using `buffer` for decompression. If `page.buffer.len() == 0`, there was no decompression and the buffer was moved. Else, decompression took place."],["get_page_iterator","Creates a new iterator of compressed pages."],["get_page_stream","Creates a new iterator of compressed pages."],["int96_to_i64_ns",""],["page_iter_to_array",""],["page_stream_to_array",""],["read_metadata","Reads parquets’ metadata syncronously."],["read_metadata_async","Reads parquets’ metadata asynchronously."]],"mod":[["schema",""],["statistics",""]],"struct":[["ColumnChunkMetaData","Metadata for a column chunk."],["ColumnDescriptor","A descriptor for leaf-level primitive columns. This encapsulates information such as definition and repetition levels and is used to re-assemble nested data."],["CompressedDataPage","A [`CompressedDataPage`] is compressed, encoded representation of a Parquet data page. It holds actual data and thus cloning it is expensive."],["DataPage","A [`DataPage`] is an uncompressed, encoded representation of a Parquet data page. It holds actual data and thus cloning it is expensive."],["Decompressor","Decompressor that allows re-using the page buffer of [`PageIterator`]"],["FileMetaData","Metadata for a Parquet file."],["PageIterator","A page iterator iterates over row group’s pages. In parquet, pages are guaranteed to be contiguously arranged in memory and therefore must be read in sequence."],["RecordReader","Single threaded iterator of [`RecordBatch`] from a parquet file."],["RowGroupMetaData","Metadata for a row group."],["TimestampType","Timestamp logical type annotation"]],"trait":[["StreamingIterator","An interface for dealing with streaming iterators."]],"type":[["PageFilter","Type declaration for a page filter"]]});